@page "/employee-form/{EmployeeId:int?}"
@using System.ComponentModel.DataAnnotations
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@* @inject IEmployeeService EmployeeService *@

<div class="container mt-5">
    <h3 class="mb-5">@(employee.Id == 0 ? "Agregar nuevo Empleado" : "Editar Empleado")</h3>
</div>

<div class="container my-5 pb-5" style="max-width: 450px;">
    <EditForm Model="@employee" OnValidSubmit="@HandleValidSubmit" FormName="employee-form">
        <DataAnnotationsValidator />

        <div class="form-group" style="height: 84px;">
            <label for="FullName">Fullname</label>
            <InputTextCustom Id="fullName" @bind-MiValor="employee.FullName" />
            <ValidationMessage For="@(() => employee.FullName)" />
        </div>

        <div class="form-group" style="height: 84px;">
            <label for="email">Email:</label>
            <InputText id="email" type="email" class="form-control" @bind-Value="employee.Email" />
            <ValidationMessage For="@(() => employee.Email)" />
        </div>

        <div class="form-group" style="height: 84px;">
            <label for="age">Age:</label>
            <InputNumber id="age" class="form-control" @bind-Value="employee.Age" />
            <ValidationMessage For="@(() => employee.Age)" />
        </div>

        <div class="mt-3">
            <PrimaryButton Text="Guardar" />
            <SecondaryButton Text="Cancelar" OnClick="Cancel" />
        </div>
    </EditForm>
</div>

@if (!string.IsNullOrEmpty(statusMessage))
{
    <p class="alert alert-info">@statusMessage</p>
}

@code {
    [Parameter] public int? EmployeeId { get; set; }

    private Employee employee = new Employee(0, "asd", string.Empty, 18);
    private string statusMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // if (EmployeeId.HasValue)
        // {
        //     employee = EmployeeService.GetEmployeeById(EmployeeId.Value);
        // }
    }

    private void HandleValidSubmit()
    {
        // if (employee.Id != 0)
        // {
        //     EmployeeService.UpdateEmployee(employee);
        //     statusMessage = "Employee updated successfully!";
        // }
        // else
        // {
        //     EmployeeService.AddEmployee(employee);
        //     statusMessage = "Employee added successfully!";
        // }

        // NavigationManager.NavigateTo("/employees");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/employees");
    }
}
